# using online tool to calculate base from basis in order
#e0 = (1-1000000)
#e1 = (01-100000)
#e2 = (001-10000)
#e3 = (0001-1000)
#e4 = (00001-100)
#e5 = (00000110)
#e6 = (-.5,-.5,-.5,-.5,-.5,-.5,-.5,-.5)
#e7 = (000001-10)

"""
r0 = I - e0 e0t = 
0	1	0	0	0	0	0	0
1	0	0	0	0	0	0	0
0	0	1	0	0	0	0	0
0	0	0	1	0	0	0	0
0	0	0	0	1	0	0	0
0	0	0	0	0	1	0	0
0	0	0	0	0	0	1	0
0	0	0	0	0	0	0	1

r1 = I - e1 e1t = 	
1	0	0	0	0	0	0	0
0	0	1	0	0	0	0	0
0	1	0	0	0	0	0	0
0	0	0	1	0	0	0	0
0	0	0	0	1	0	0	0
0	0	0	0	0	1	0	0
0	0	0	0	0	0	1	0
0	0	0	0	0	0	0	1

r2 = I - e2 e2t = 
1	0	0	0	0	0	0	0
0	1	0	0	0	0	0	0
0	0	0	1	0	0	0	0
0	0	1	0	0	0	0	0
0	0	0	0	1	0	0	0
0	0	0	0	0	1	0	0
0	0	0	0	0	0	1	0
0	0	0	0	0	0	0	1

r3 = I - e3 e3t = 
1	0	0	0	0	0	0	0
0	1	0	0	0	0	0	0
0	0	1	0	0	0	0	0
0	0	0	0	1	0	0	0
0	0	0	1	0	0	0	0
0	0	0	0	0	1	0	0
0	0	0	0	0	0	1	0
0	0	0	0	0	0	0	1

r4 = I - e4 e4t = 
1	0	0	0	0	0	0	0
0	1	0	0	0	0	0	0
0	0	1	0	0	0	0	0
0	0	0	1	0	0	0	0
0	0	0	0	0	1	0	0
0	0	0	0	1	0	0	0
0	0	0	0	0	0	1	0
0	0	0	0	0	0	0	1

r5 = I - e5 e5t = 
1	0	0	0	0	0	0	0
0	1	0	0	0	0	0	0
0	0	1	0	0	0	0	0
0	0	0	1	0	0	0	0
0	0	0	0	1	0	0	0
0	0	0	0	0	0	-1	0
0	0	0	0	0	-1	0	0
0	0	0	0	0	0	0	1

r6 = I - e6 e6t = 
0.75	-0.25	-0.25	-0.25	-0.25	-0.25	-0.25	-0.25
-0.25	0.75	-0.25	-0.25	-0.25	-0.25	-0.25	-0.25
-0.25	-0.25	0.75	-0.25	-0.25	-0.25	-0.25	-0.25
-0.25	-0.25	-0.25	0.75	-0.25	-0.25	-0.25	-0.25
-0.25	-0.25	-0.25	-0.25	0.75	-0.25	-0.25	-0.25
-0.25	-0.25	-0.25	-0.25	-0.25	0.75	-0.25	-0.25
-0.25	-0.25	-0.25	-0.25	-0.25	-0.25	0.75	-0.25
-0.25	-0.25	-0.25	-0.25	-0.25	-0.25	-0.25	0.75

r7 = I - e7 e7t =
1	0	0	0	0	0	0	0
0	1	0	0	0	0	0	0
0	0	1	0	0	0	0	0
0	0	0	1	0	0	0	0
0	0	0	0	1	0	0	0
0	0	0	0	0	0	1	0
0	0	0	0	0	1	0	0
0	0	0	0	0	0	0	1

(e_i, e_i) = 2

rc0 = prod(r0,1,2,3,4,5,6,7)= 
np.array[[0.25 , 0.25 , 0.25 , 0.25 , 0.25 , -0.75 , 0.25 , 0.25 ]
        [0.75 , -0.25 , -0.25 , -0.25 , -0.25 , -0.25 , -0.25 , -0.25 ]
        [-0.25 , 0.75 , -0.25 , -0.25 , -0.25 , -0.25 , -0.25 , -0.25 ]
        [-0.25 , -0.25 , 0.75 , -0.25 , -0.25 , -0.25 , -0.25 , -0.25 ]
        [-0.25 , -0.25 , -0.25 , 0.75 , -0.25 , -0.25 , -0.25 , -0.25 ]
        [-0.25 , -0.25 , -0.25 , -0.25 , 0.75 , -0.25 , -0.25 , -0.25 ]
        [0.25 , 0.25 , 0.25 , 0.25 , 0.25 , 0.25 , -0.75 , 0.25 ]]


/////
/////
/////

e6' = (-.5,-.5,-.5,-.5,-.5,-.5,-.5,.5) =>

rc0 = 

[[0.25 , 0.25 , 0.25 , 0.25 , 0.25 , -0.75 , 0.25 , -0.25 ],
[0.75 , -0.25 , -0.25 , -0.25 , -0.25 , -0.25 , -0.25 , 0.25 ],
[-0.25 , 0.75 , -0.25 , -0.25 , -0.25 , -0.25 , -0.25 , 0.25 ],
[-0.25 , -0.25 , 0.75 , -0.25 , -0.25 , -0.25 , -0.25 , 0.25 ],
[-0.25 , -0.25 , -0.25 , 0.75 , -0.25 , -0.25 , -0.25 , 0.25 ],
[-0.25 , -0.25 , -0.25 , -0.25 , 0.75 , -0.25 , -0.25 , 0.25 ],
[0.25 , 0.25 , 0.25 , 0.25 , 0.25 , 0.25 , -0.75 , -0.25 ],
[0.25 , 0.25 , 0.25 , 0.25 , 0.25 , 0.25 , 0.25 , 0.75]]

e6' = (-.5,-.5,-.5,-.5,-.5,-.5,.5,.5) =>

rc0 = 

[[-0.25 , -0.25 , -0.25 , -0.25 , -0.25 , -0.75 , -0.25 , 0.25 ],
[0.75 , -0.25 , -0.25 , -0.25 , -0.25 , 0.25 , -0.25 , 0.25 ],
[-0.25 , 0.75 , -0.25 , -0.25 , -0.25 , 0.25 , -0.25 , 0.25 ],
[-0.25 , -0.25 , 0.75 , -0.25 , -0.25 , 0.25 , -0.25 , 0.25 ],
[-0.25 , -0.25 , -0.25 , 0.75 , -0.25 , 0.25 , -0.25 , 0.25 ],
[-0.25 , -0.25 , -0.25 , -0.25 , 0.75 , 0.25 , -0.25 , 0.25 ],
[0.25 , 0.25 , 0.25 , 0.25 , 0.25 , -0.25 , -0.75 , -0.25 ],
[0.25 , 0.25 , 0.25 , 0.25 , 0.25 , -0.25 , 0.25 , 0.75]]



 """

import numpy as np
import scipy.linalg as la

RE = np.array()

rc0 = [[-0.25 , -0.25 , -0.25 , -0.25 , -0.25 , -0.75 , -0.25 , 0.25 ],
	[0.75 , -0.25 , -0.25 , -0.25 , -0.25 , 0.25 , -0.25 , 0.25 ],
	[-0.25 , 0.75 , -0.25 , -0.25 , -0.25 , 0.25 , -0.25 , 0.25 ],
	[-0.25 , -0.25 , 0.75 , -0.25 , -0.25 , 0.25 , -0.25 , 0.25 ],
	[-0.25 , -0.25 , -0.25 , 0.75 , -0.25 , 0.25 , -0.25 , 0.25 ],
	[-0.25 , -0.25 , -0.25 , -0.25 , 0.75 , 0.25 , -0.25 , 0.25 ],
	[0.25 , 0.25 , 0.25 , 0.25 , 0.25 , -0.25 , -0.75 , -0.25 ],
	[0.25 , 0.25 , 0.25 , 0.25 , 0.25 , -0.25 , 0.25 , 0.75]]

results = la.eig(rc0)

print("eigenvals")
print(results[0])
print("eigenvects")
print(results[1])
